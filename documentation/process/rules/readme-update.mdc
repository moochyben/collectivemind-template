---
description: 
globs: 
alwaysApply: false
---
// README Review and Update Rule
// This rule provides guidelines for periodically reviewing and updating README files
// to ensure documentation stays current with the codebase.

/**
 * README Review Schedule and Guidelines
 * 
 * Purpose:
 * Ensure all README files in the project are regularly reviewed and updated
 * to maintain accurate documentation that reflects the current state of the codebase.
 * 
 * Review Schedule:
 * - Main README.md: Review monthly or after major feature additions
 * - Documentation README files: Review quarterly or when related features change
 * - Component/Module README files: Review when the component is modified
 * 
 * Review Checklist:
 * 1. Verify all links are working and point to the correct resources
 * 2. Ensure dates referenced in the documentation are current
 * 3. Check that feature descriptions match the actual implementation
 * 4. Confirm installation and setup instructions are up to date
 * 5. Update any screenshots or diagrams to reflect the current UI/architecture
 * 6. Review code examples to ensure they work with the current API
 * 7. Add documentation for new features or functionality
 * 8. Remove documentation for deprecated features
 * 9. Check for consistency in formatting and style across all README files
 * 10. Ensure all README files follow the project's documentation standards
 * 
 * README Structure Guidelines:
 * - Start with a clear, concise description of the component/module/project
 * - Include installation/setup instructions where applicable
 * - Document key features and functionality
 * - Provide usage examples for important features
 * - Include information about configuration options
 * - Add troubleshooting section for common issues
 * - Include links to related documentation
 * 
 * Automation:
 * - Use grep or similar tools to find outdated date references
 * - Implement automated link checking to identify broken links
 * - Consider using documentation testing tools to verify code examples
 * 
 * Documentation Debt:
 * - Maintain a list of documentation improvements needed
 * - Prioritize documentation updates based on user impact
 * - Allocate time for documentation updates in each sprint
 */

// Example commands for README maintenance:
// 
// Find all README files in the project:
// find . -name "README.md" -not -path "*/node_modules/*" -not -path "*/\.*"
//
// Check for broken internal links:
// grep -r "\[.*\](mdc:.*)" --include="*.md" . | grep -v "http" | grep -v "www" | awk -F'(' '{print $2}' | tr -d ')' | xargs -I{} test -e {} || echo "Broken link: {}"
//
// Find outdated date references (adjust year as needed):
// grep -r "2024" --include="*.md" . 