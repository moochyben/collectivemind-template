---
description: Updating any documentation in the documentation folder
globs: 
alwaysApply: false
---
# Global Documentation Standards
Version: 1.0.0
Last Updated: 2025-03-23

## Purpose and Scope
This rule defines the foundational standards all documentation must follow across the repository. These standards ensure consistency, clarity, and maintainability of all project documentation.

## Parent Rules
This is a top-level rule with no parents.

## Rule Specifications

### Rule G-1: Document Structure
All documentation must include:
1. Title (H1 heading)
2. Last updated date
3. Purpose statement
4. Directory contents (if applicable)
5. Related documentation section

### Rule G-2: Formatting Standards
1. Use Markdown for all documentation
2. Use atx-style headers (# H1, ## H2)
3. Code blocks use triple backticks with language specification
4. Tables use standard Markdown table syntax
5. Links use reference-style syntax for maintainability
6. Use numbered lists for sequential steps or prioritized items
7. Use bullet lists for non-sequential items
8. Include blank lines before and after lists and code blocks

### Rule G-3: File Naming
1. Use kebab-case for all file names (e.g., `file-name.md`)
2. Include descriptive, specific names
3. Avoid acronyms unless widely recognized
4. For dated files, use YYYY-MM-DD-name.md format
5. README.md files should be included in every directory

### Rule G-4: Directory Structure
1. Organize documentation in a logical hierarchy
2. Use descriptive directory names in kebab-case
3. Include a README.md file in each directory explaining its contents
4. Group related documents in appropriate subdirectories
5. Maintain consistent directory structure across the repository

### Rule G-5: Cross-Referencing
1. Use relative links for internal documentation references
2. Include descriptive link text (avoid "click here" or "this link")
3. Verify links regularly to prevent broken references
4. Use standardized format for referencing other documents
5. When referencing another document, include section information if applicable

### Rule G-6: Version Control
1. Include version information in document headers
2. Track major changes in a changelog section when appropriate
3. Use semantic versioning (MAJOR.MINOR.PATCH)
4. Include last updated date in YYYY-MM-DD format
5. Document significant changes in commit messages

### Rule G-7: Content Standards
1. Use clear, concise language
2. Define acronyms on first use
3. Use active voice where possible
4. Avoid jargon unless necessary, and define when used
5. Include examples to illustrate complex concepts
6. Use consistent terminology throughout all documentation
7. Write in present tense for current features and capabilities

### Rule G-8: Metadata
1. Include appropriate metadata in document headers
2. Tag documents with relevant categories
3. Identify document owners or responsible teams
4. Specify review cadence for each document type
5. Include document status (Draft, Review, Approved, Archived)

### Rule G-9: Documentation Review
1. All documentation must be reviewed before publishing
2. Review must verify compliance with these standards
3. Technical accuracy must be verified by subject matter experts
4. Regular review cycles must be established based on document type
5. Documentation updates must be tracked and communicated

### Rule G-10: Placeholders and TODOs
1. Clearly mark placeholder content with blockquotes and "Note" prefix
2. Include planned document creation in README files with "*(Planned)*" notation
3. Use consistent TODO format: `TODO: [Description] (Due: YYYY-MM-DD)`
4. Provide context for planned content (what will be included)
5. Review and update placeholders regularly

## Application Examples

### Example 1: Proper Document Structure
```markdown
# Feature Documentation

Last Updated: 2025-03-23

## Purpose
This document outlines the requirements for the collaborative editing feature.

## Contents
- [Overview](mdc:#overview)
- [Requirements](mdc:#requirements)
- [Implementation](mdc:#implementation)

## Overview
...

## Related Documentation
- [Technical Specification](mdc:../technical/collaborative-editing-spec.md)
- [UI Design](mdc:../design/collaborative-editing-ui.md)
```

### Example 2: Proper Cross-Referencing
```markdown
For more information on data architecture, see the [Data Architecture Documentation](mdc:../../technical/architecture/data-architecture/README.md#data-flow).
```

## Validation Criteria
A document complies with these global standards if it:
1. Includes all required structural elements
2. Follows formatting standards consistently
3. Uses proper file naming conventions
4. Includes appropriate metadata
5. Contains complete and accurate cross-references
6. Has been reviewed according to established processes
7. Has current version information and last updated date

## Automation Capabilities
An AI agent can validate compliance with these standards by:
1. Checking for presence of required sections
2. Validating Markdown syntax and formatting
3. Verifying file naming conventions
4. Ensuring last updated date is present and current
5. Validating relative links and cross-references
6. Identifying improper formatting or structure
7. Detecting placeholder content that needs updating
8. Verifying consistent terminology usage
